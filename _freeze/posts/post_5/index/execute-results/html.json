{
  "hash": "282487dd693ff4d3f6d1de2adf76454d",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Partilere Göre Milletvekillerinin Ortalama Yüzü: Türkiye Örneği\"\nauthor: \"Uraz Akgül\"\ndate: \"2024-04-10\"\n# date-modified: last-modified\ndate-format: \"MMMM D, YYYY\"\ncategories: [Yüz]\nimage: \"imgs/kadin-erkek-mv.jpg\"\nexecute:\n  eval: false\n---\n\n1800'lü yıllarda Francis Galton, belirli bir grup insanda ortak olan yüz özelliklerini görselleştirmek amacıyla birçok farklı bireyin yüz fotoğraflarını tek bir fotoğraf filmi üzerine yansıtmış ve bu yüzlerin kompozit görüntülerini oluşturmuştur.\n\nBugün benzer bir yaklaşım, belirli bir grup insanın -örneğin, milletvekilleri gibi- ortak yüz özelliklerini incelemek amacıyla modern tekniklerle gerçekleştirilebilir.\n\nBu uygulamada, 28. dönem AKP, CHP, DEM ve MHP milletvekillerinin fotoğraflarını kullanarak parti ve cinsiyet kategorisinde ortalama bir yüz yaratacağız. Uygulamayı GitHub'ta bulunan [şu](https://github.com/johnwmillr/Facer){.external target=\"_blank\"} repo yardımı ile yapacağız. Uygulamanın veri seti olan fotoğraflara ise [burada](https://github.com/urazakgul/python-blog/tree/main/posts/post_5){.external target=\"_blank\"} bulunan `tbmm_28` isimli klasör ile ulaşabilirsiniz.\n\nÖncelikle repoyu proje klasörümüze klonlayalım.\n\n\n```{bash}\n\ngit clone https://github.com/johnwmillr/facer.git Facer\n\n```\n\n\nKlonlama işleminden sonra bulunduğumuz dizinde sadece `Facer` klasöründeki `facer` klasörünü bırakabiliriz. `facer` klasörünün içinde ise `facer.py` ve `utils.py` dosyaları kalabilir.\n\nYukarıdaki işlemden sonra aşağıdaki gibi zip'li dosyayı indirip unzip'liyor ve dosyayı bulunduğumuz dizinde açtığımız `model` isimli klasöre taşıyoruz.\n\n\n```{bash}\n\ncurl -O http://dlib.net/files/shape_predictor_68_face_landmarks.dat.bz2\nbunzip2 shape_predictor_68_face_landmarks.dat.bz2\n\nmkdir model\nmv shape_predictor_68_face_landmarks.dat model\n\n```\n\n\nTBMM'nin web sitesinden alınan görseller `.jpe` formatında olduğu için `facer` klasöründe bulunan `facer.py` dosyasındaki `glob_image_files()` fonksiyonuna `.jpe` uzantısını ekliyoruz.\n\nOrtalama bir yüze ulaşmak için uygulanan adımlar [burada](https://learnopencv.com/average-face-opencv-c-python-tutorial/){.external target=\"_blank\"} detaylı bir şekilde veriliyor.\n\n::: {#6ccbe8c7 .cell execution_count=1}\n``` {.python .cell-code}\nfrom facer.facer import load_images, detect_face_landmarks, create_average_face\nimport matplotlib.pyplot as plt\nimport os\n\nfolders = [\n    './tbmm_28/akp/kadin',\n    './tbmm_28/chp/kadin',\n    './tbmm_28/dem/kadin',\n    './tbmm_28/mhp/kadin',\n    './tbmm_28/akp/erkek',\n    './tbmm_28/chp/erkek',\n    './tbmm_28/dem/erkek',\n    './tbmm_28/mhp/erkek'\n]\n\nfor folder in folders:\n    images = load_images(folder)\n\n    landmarks, faces = detect_face_landmarks(images)\n    average_face = create_average_face(faces, landmarks, save_image=False)\n\n    gender = 'kadin' if 'kadin' in folder else 'erkek'\n    party = folder.split('/')[2]\n    file_name = f'{party}_{gender}.jpg'\n\n    plt.imshow(average_face)\n    plt.axis('off')\n    plt.savefig(os.path.join('imgs', file_name))\n    plt.show()\n```\n:::\n\n\n![](imgs/kadin-erkek-mv.jpg)\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}